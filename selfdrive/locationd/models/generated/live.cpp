#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7275051445048872074) {
   out_7275051445048872074[0] = 0;
   out_7275051445048872074[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7275051445048872074[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7275051445048872074[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7275051445048872074[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7275051445048872074[5] = -sin(in_vec[1]);
   out_7275051445048872074[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7275051445048872074[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7275051445048872074[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7275051445048872074[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7275051445048872074[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7275051445048872074[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7275051445048872074[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7275051445048872074[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7275051445048872074[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7275051445048872074[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7275051445048872074[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7275051445048872074[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_900214999320880639) {
   out_900214999320880639[0] = delta_x[0] + nom_x[0];
   out_900214999320880639[1] = delta_x[1] + nom_x[1];
   out_900214999320880639[2] = delta_x[2] + nom_x[2];
   out_900214999320880639[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_900214999320880639[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_900214999320880639[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_900214999320880639[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_900214999320880639[7] = delta_x[6] + nom_x[7];
   out_900214999320880639[8] = delta_x[7] + nom_x[8];
   out_900214999320880639[9] = delta_x[8] + nom_x[9];
   out_900214999320880639[10] = delta_x[9] + nom_x[10];
   out_900214999320880639[11] = delta_x[10] + nom_x[11];
   out_900214999320880639[12] = delta_x[11] + nom_x[12];
   out_900214999320880639[13] = delta_x[12] + nom_x[13];
   out_900214999320880639[14] = delta_x[13] + nom_x[14];
   out_900214999320880639[15] = delta_x[14] + nom_x[15];
   out_900214999320880639[16] = delta_x[15] + nom_x[16];
   out_900214999320880639[17] = delta_x[16] + nom_x[17];
   out_900214999320880639[18] = delta_x[17] + nom_x[18];
   out_900214999320880639[19] = delta_x[18] + nom_x[19];
   out_900214999320880639[20] = delta_x[19] + nom_x[20];
   out_900214999320880639[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6228497090895348531) {
   out_6228497090895348531[0] = -nom_x[0] + true_x[0];
   out_6228497090895348531[1] = -nom_x[1] + true_x[1];
   out_6228497090895348531[2] = -nom_x[2] + true_x[2];
   out_6228497090895348531[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6228497090895348531[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6228497090895348531[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6228497090895348531[6] = -nom_x[7] + true_x[7];
   out_6228497090895348531[7] = -nom_x[8] + true_x[8];
   out_6228497090895348531[8] = -nom_x[9] + true_x[9];
   out_6228497090895348531[9] = -nom_x[10] + true_x[10];
   out_6228497090895348531[10] = -nom_x[11] + true_x[11];
   out_6228497090895348531[11] = -nom_x[12] + true_x[12];
   out_6228497090895348531[12] = -nom_x[13] + true_x[13];
   out_6228497090895348531[13] = -nom_x[14] + true_x[14];
   out_6228497090895348531[14] = -nom_x[15] + true_x[15];
   out_6228497090895348531[15] = -nom_x[16] + true_x[16];
   out_6228497090895348531[16] = -nom_x[17] + true_x[17];
   out_6228497090895348531[17] = -nom_x[18] + true_x[18];
   out_6228497090895348531[18] = -nom_x[19] + true_x[19];
   out_6228497090895348531[19] = -nom_x[20] + true_x[20];
   out_6228497090895348531[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6900568612264374751) {
   out_6900568612264374751[0] = 1.0;
   out_6900568612264374751[1] = 0;
   out_6900568612264374751[2] = 0;
   out_6900568612264374751[3] = 0;
   out_6900568612264374751[4] = 0;
   out_6900568612264374751[5] = 0;
   out_6900568612264374751[6] = 0;
   out_6900568612264374751[7] = 0;
   out_6900568612264374751[8] = 0;
   out_6900568612264374751[9] = 0;
   out_6900568612264374751[10] = 0;
   out_6900568612264374751[11] = 0;
   out_6900568612264374751[12] = 0;
   out_6900568612264374751[13] = 0;
   out_6900568612264374751[14] = 0;
   out_6900568612264374751[15] = 0;
   out_6900568612264374751[16] = 0;
   out_6900568612264374751[17] = 0;
   out_6900568612264374751[18] = 0;
   out_6900568612264374751[19] = 0;
   out_6900568612264374751[20] = 0;
   out_6900568612264374751[21] = 0;
   out_6900568612264374751[22] = 1.0;
   out_6900568612264374751[23] = 0;
   out_6900568612264374751[24] = 0;
   out_6900568612264374751[25] = 0;
   out_6900568612264374751[26] = 0;
   out_6900568612264374751[27] = 0;
   out_6900568612264374751[28] = 0;
   out_6900568612264374751[29] = 0;
   out_6900568612264374751[30] = 0;
   out_6900568612264374751[31] = 0;
   out_6900568612264374751[32] = 0;
   out_6900568612264374751[33] = 0;
   out_6900568612264374751[34] = 0;
   out_6900568612264374751[35] = 0;
   out_6900568612264374751[36] = 0;
   out_6900568612264374751[37] = 0;
   out_6900568612264374751[38] = 0;
   out_6900568612264374751[39] = 0;
   out_6900568612264374751[40] = 0;
   out_6900568612264374751[41] = 0;
   out_6900568612264374751[42] = 0;
   out_6900568612264374751[43] = 0;
   out_6900568612264374751[44] = 1.0;
   out_6900568612264374751[45] = 0;
   out_6900568612264374751[46] = 0;
   out_6900568612264374751[47] = 0;
   out_6900568612264374751[48] = 0;
   out_6900568612264374751[49] = 0;
   out_6900568612264374751[50] = 0;
   out_6900568612264374751[51] = 0;
   out_6900568612264374751[52] = 0;
   out_6900568612264374751[53] = 0;
   out_6900568612264374751[54] = 0;
   out_6900568612264374751[55] = 0;
   out_6900568612264374751[56] = 0;
   out_6900568612264374751[57] = 0;
   out_6900568612264374751[58] = 0;
   out_6900568612264374751[59] = 0;
   out_6900568612264374751[60] = 0;
   out_6900568612264374751[61] = 0;
   out_6900568612264374751[62] = 0;
   out_6900568612264374751[63] = 0;
   out_6900568612264374751[64] = 0;
   out_6900568612264374751[65] = 0;
   out_6900568612264374751[66] = -0.5*state[4];
   out_6900568612264374751[67] = -0.5*state[5];
   out_6900568612264374751[68] = -0.5*state[6];
   out_6900568612264374751[69] = 0;
   out_6900568612264374751[70] = 0;
   out_6900568612264374751[71] = 0;
   out_6900568612264374751[72] = 0;
   out_6900568612264374751[73] = 0;
   out_6900568612264374751[74] = 0;
   out_6900568612264374751[75] = 0;
   out_6900568612264374751[76] = 0;
   out_6900568612264374751[77] = 0;
   out_6900568612264374751[78] = 0;
   out_6900568612264374751[79] = 0;
   out_6900568612264374751[80] = 0;
   out_6900568612264374751[81] = 0;
   out_6900568612264374751[82] = 0;
   out_6900568612264374751[83] = 0;
   out_6900568612264374751[84] = 0;
   out_6900568612264374751[85] = 0;
   out_6900568612264374751[86] = 0;
   out_6900568612264374751[87] = 0.5*state[3];
   out_6900568612264374751[88] = 0.5*state[6];
   out_6900568612264374751[89] = -0.5*state[5];
   out_6900568612264374751[90] = 0;
   out_6900568612264374751[91] = 0;
   out_6900568612264374751[92] = 0;
   out_6900568612264374751[93] = 0;
   out_6900568612264374751[94] = 0;
   out_6900568612264374751[95] = 0;
   out_6900568612264374751[96] = 0;
   out_6900568612264374751[97] = 0;
   out_6900568612264374751[98] = 0;
   out_6900568612264374751[99] = 0;
   out_6900568612264374751[100] = 0;
   out_6900568612264374751[101] = 0;
   out_6900568612264374751[102] = 0;
   out_6900568612264374751[103] = 0;
   out_6900568612264374751[104] = 0;
   out_6900568612264374751[105] = 0;
   out_6900568612264374751[106] = 0;
   out_6900568612264374751[107] = 0;
   out_6900568612264374751[108] = -0.5*state[6];
   out_6900568612264374751[109] = 0.5*state[3];
   out_6900568612264374751[110] = 0.5*state[4];
   out_6900568612264374751[111] = 0;
   out_6900568612264374751[112] = 0;
   out_6900568612264374751[113] = 0;
   out_6900568612264374751[114] = 0;
   out_6900568612264374751[115] = 0;
   out_6900568612264374751[116] = 0;
   out_6900568612264374751[117] = 0;
   out_6900568612264374751[118] = 0;
   out_6900568612264374751[119] = 0;
   out_6900568612264374751[120] = 0;
   out_6900568612264374751[121] = 0;
   out_6900568612264374751[122] = 0;
   out_6900568612264374751[123] = 0;
   out_6900568612264374751[124] = 0;
   out_6900568612264374751[125] = 0;
   out_6900568612264374751[126] = 0;
   out_6900568612264374751[127] = 0;
   out_6900568612264374751[128] = 0;
   out_6900568612264374751[129] = 0.5*state[5];
   out_6900568612264374751[130] = -0.5*state[4];
   out_6900568612264374751[131] = 0.5*state[3];
   out_6900568612264374751[132] = 0;
   out_6900568612264374751[133] = 0;
   out_6900568612264374751[134] = 0;
   out_6900568612264374751[135] = 0;
   out_6900568612264374751[136] = 0;
   out_6900568612264374751[137] = 0;
   out_6900568612264374751[138] = 0;
   out_6900568612264374751[139] = 0;
   out_6900568612264374751[140] = 0;
   out_6900568612264374751[141] = 0;
   out_6900568612264374751[142] = 0;
   out_6900568612264374751[143] = 0;
   out_6900568612264374751[144] = 0;
   out_6900568612264374751[145] = 0;
   out_6900568612264374751[146] = 0;
   out_6900568612264374751[147] = 0;
   out_6900568612264374751[148] = 0;
   out_6900568612264374751[149] = 0;
   out_6900568612264374751[150] = 0;
   out_6900568612264374751[151] = 0;
   out_6900568612264374751[152] = 0;
   out_6900568612264374751[153] = 1.0;
   out_6900568612264374751[154] = 0;
   out_6900568612264374751[155] = 0;
   out_6900568612264374751[156] = 0;
   out_6900568612264374751[157] = 0;
   out_6900568612264374751[158] = 0;
   out_6900568612264374751[159] = 0;
   out_6900568612264374751[160] = 0;
   out_6900568612264374751[161] = 0;
   out_6900568612264374751[162] = 0;
   out_6900568612264374751[163] = 0;
   out_6900568612264374751[164] = 0;
   out_6900568612264374751[165] = 0;
   out_6900568612264374751[166] = 0;
   out_6900568612264374751[167] = 0;
   out_6900568612264374751[168] = 0;
   out_6900568612264374751[169] = 0;
   out_6900568612264374751[170] = 0;
   out_6900568612264374751[171] = 0;
   out_6900568612264374751[172] = 0;
   out_6900568612264374751[173] = 0;
   out_6900568612264374751[174] = 0;
   out_6900568612264374751[175] = 1.0;
   out_6900568612264374751[176] = 0;
   out_6900568612264374751[177] = 0;
   out_6900568612264374751[178] = 0;
   out_6900568612264374751[179] = 0;
   out_6900568612264374751[180] = 0;
   out_6900568612264374751[181] = 0;
   out_6900568612264374751[182] = 0;
   out_6900568612264374751[183] = 0;
   out_6900568612264374751[184] = 0;
   out_6900568612264374751[185] = 0;
   out_6900568612264374751[186] = 0;
   out_6900568612264374751[187] = 0;
   out_6900568612264374751[188] = 0;
   out_6900568612264374751[189] = 0;
   out_6900568612264374751[190] = 0;
   out_6900568612264374751[191] = 0;
   out_6900568612264374751[192] = 0;
   out_6900568612264374751[193] = 0;
   out_6900568612264374751[194] = 0;
   out_6900568612264374751[195] = 0;
   out_6900568612264374751[196] = 0;
   out_6900568612264374751[197] = 1.0;
   out_6900568612264374751[198] = 0;
   out_6900568612264374751[199] = 0;
   out_6900568612264374751[200] = 0;
   out_6900568612264374751[201] = 0;
   out_6900568612264374751[202] = 0;
   out_6900568612264374751[203] = 0;
   out_6900568612264374751[204] = 0;
   out_6900568612264374751[205] = 0;
   out_6900568612264374751[206] = 0;
   out_6900568612264374751[207] = 0;
   out_6900568612264374751[208] = 0;
   out_6900568612264374751[209] = 0;
   out_6900568612264374751[210] = 0;
   out_6900568612264374751[211] = 0;
   out_6900568612264374751[212] = 0;
   out_6900568612264374751[213] = 0;
   out_6900568612264374751[214] = 0;
   out_6900568612264374751[215] = 0;
   out_6900568612264374751[216] = 0;
   out_6900568612264374751[217] = 0;
   out_6900568612264374751[218] = 0;
   out_6900568612264374751[219] = 1.0;
   out_6900568612264374751[220] = 0;
   out_6900568612264374751[221] = 0;
   out_6900568612264374751[222] = 0;
   out_6900568612264374751[223] = 0;
   out_6900568612264374751[224] = 0;
   out_6900568612264374751[225] = 0;
   out_6900568612264374751[226] = 0;
   out_6900568612264374751[227] = 0;
   out_6900568612264374751[228] = 0;
   out_6900568612264374751[229] = 0;
   out_6900568612264374751[230] = 0;
   out_6900568612264374751[231] = 0;
   out_6900568612264374751[232] = 0;
   out_6900568612264374751[233] = 0;
   out_6900568612264374751[234] = 0;
   out_6900568612264374751[235] = 0;
   out_6900568612264374751[236] = 0;
   out_6900568612264374751[237] = 0;
   out_6900568612264374751[238] = 0;
   out_6900568612264374751[239] = 0;
   out_6900568612264374751[240] = 0;
   out_6900568612264374751[241] = 1.0;
   out_6900568612264374751[242] = 0;
   out_6900568612264374751[243] = 0;
   out_6900568612264374751[244] = 0;
   out_6900568612264374751[245] = 0;
   out_6900568612264374751[246] = 0;
   out_6900568612264374751[247] = 0;
   out_6900568612264374751[248] = 0;
   out_6900568612264374751[249] = 0;
   out_6900568612264374751[250] = 0;
   out_6900568612264374751[251] = 0;
   out_6900568612264374751[252] = 0;
   out_6900568612264374751[253] = 0;
   out_6900568612264374751[254] = 0;
   out_6900568612264374751[255] = 0;
   out_6900568612264374751[256] = 0;
   out_6900568612264374751[257] = 0;
   out_6900568612264374751[258] = 0;
   out_6900568612264374751[259] = 0;
   out_6900568612264374751[260] = 0;
   out_6900568612264374751[261] = 0;
   out_6900568612264374751[262] = 0;
   out_6900568612264374751[263] = 1.0;
   out_6900568612264374751[264] = 0;
   out_6900568612264374751[265] = 0;
   out_6900568612264374751[266] = 0;
   out_6900568612264374751[267] = 0;
   out_6900568612264374751[268] = 0;
   out_6900568612264374751[269] = 0;
   out_6900568612264374751[270] = 0;
   out_6900568612264374751[271] = 0;
   out_6900568612264374751[272] = 0;
   out_6900568612264374751[273] = 0;
   out_6900568612264374751[274] = 0;
   out_6900568612264374751[275] = 0;
   out_6900568612264374751[276] = 0;
   out_6900568612264374751[277] = 0;
   out_6900568612264374751[278] = 0;
   out_6900568612264374751[279] = 0;
   out_6900568612264374751[280] = 0;
   out_6900568612264374751[281] = 0;
   out_6900568612264374751[282] = 0;
   out_6900568612264374751[283] = 0;
   out_6900568612264374751[284] = 0;
   out_6900568612264374751[285] = 1.0;
   out_6900568612264374751[286] = 0;
   out_6900568612264374751[287] = 0;
   out_6900568612264374751[288] = 0;
   out_6900568612264374751[289] = 0;
   out_6900568612264374751[290] = 0;
   out_6900568612264374751[291] = 0;
   out_6900568612264374751[292] = 0;
   out_6900568612264374751[293] = 0;
   out_6900568612264374751[294] = 0;
   out_6900568612264374751[295] = 0;
   out_6900568612264374751[296] = 0;
   out_6900568612264374751[297] = 0;
   out_6900568612264374751[298] = 0;
   out_6900568612264374751[299] = 0;
   out_6900568612264374751[300] = 0;
   out_6900568612264374751[301] = 0;
   out_6900568612264374751[302] = 0;
   out_6900568612264374751[303] = 0;
   out_6900568612264374751[304] = 0;
   out_6900568612264374751[305] = 0;
   out_6900568612264374751[306] = 0;
   out_6900568612264374751[307] = 1.0;
   out_6900568612264374751[308] = 0;
   out_6900568612264374751[309] = 0;
   out_6900568612264374751[310] = 0;
   out_6900568612264374751[311] = 0;
   out_6900568612264374751[312] = 0;
   out_6900568612264374751[313] = 0;
   out_6900568612264374751[314] = 0;
   out_6900568612264374751[315] = 0;
   out_6900568612264374751[316] = 0;
   out_6900568612264374751[317] = 0;
   out_6900568612264374751[318] = 0;
   out_6900568612264374751[319] = 0;
   out_6900568612264374751[320] = 0;
   out_6900568612264374751[321] = 0;
   out_6900568612264374751[322] = 0;
   out_6900568612264374751[323] = 0;
   out_6900568612264374751[324] = 0;
   out_6900568612264374751[325] = 0;
   out_6900568612264374751[326] = 0;
   out_6900568612264374751[327] = 0;
   out_6900568612264374751[328] = 0;
   out_6900568612264374751[329] = 1.0;
   out_6900568612264374751[330] = 0;
   out_6900568612264374751[331] = 0;
   out_6900568612264374751[332] = 0;
   out_6900568612264374751[333] = 0;
   out_6900568612264374751[334] = 0;
   out_6900568612264374751[335] = 0;
   out_6900568612264374751[336] = 0;
   out_6900568612264374751[337] = 0;
   out_6900568612264374751[338] = 0;
   out_6900568612264374751[339] = 0;
   out_6900568612264374751[340] = 0;
   out_6900568612264374751[341] = 0;
   out_6900568612264374751[342] = 0;
   out_6900568612264374751[343] = 0;
   out_6900568612264374751[344] = 0;
   out_6900568612264374751[345] = 0;
   out_6900568612264374751[346] = 0;
   out_6900568612264374751[347] = 0;
   out_6900568612264374751[348] = 0;
   out_6900568612264374751[349] = 0;
   out_6900568612264374751[350] = 0;
   out_6900568612264374751[351] = 1.0;
   out_6900568612264374751[352] = 0;
   out_6900568612264374751[353] = 0;
   out_6900568612264374751[354] = 0;
   out_6900568612264374751[355] = 0;
   out_6900568612264374751[356] = 0;
   out_6900568612264374751[357] = 0;
   out_6900568612264374751[358] = 0;
   out_6900568612264374751[359] = 0;
   out_6900568612264374751[360] = 0;
   out_6900568612264374751[361] = 0;
   out_6900568612264374751[362] = 0;
   out_6900568612264374751[363] = 0;
   out_6900568612264374751[364] = 0;
   out_6900568612264374751[365] = 0;
   out_6900568612264374751[366] = 0;
   out_6900568612264374751[367] = 0;
   out_6900568612264374751[368] = 0;
   out_6900568612264374751[369] = 0;
   out_6900568612264374751[370] = 0;
   out_6900568612264374751[371] = 0;
   out_6900568612264374751[372] = 0;
   out_6900568612264374751[373] = 1.0;
   out_6900568612264374751[374] = 0;
   out_6900568612264374751[375] = 0;
   out_6900568612264374751[376] = 0;
   out_6900568612264374751[377] = 0;
   out_6900568612264374751[378] = 0;
   out_6900568612264374751[379] = 0;
   out_6900568612264374751[380] = 0;
   out_6900568612264374751[381] = 0;
   out_6900568612264374751[382] = 0;
   out_6900568612264374751[383] = 0;
   out_6900568612264374751[384] = 0;
   out_6900568612264374751[385] = 0;
   out_6900568612264374751[386] = 0;
   out_6900568612264374751[387] = 0;
   out_6900568612264374751[388] = 0;
   out_6900568612264374751[389] = 0;
   out_6900568612264374751[390] = 0;
   out_6900568612264374751[391] = 0;
   out_6900568612264374751[392] = 0;
   out_6900568612264374751[393] = 0;
   out_6900568612264374751[394] = 0;
   out_6900568612264374751[395] = 1.0;
   out_6900568612264374751[396] = 0;
   out_6900568612264374751[397] = 0;
   out_6900568612264374751[398] = 0;
   out_6900568612264374751[399] = 0;
   out_6900568612264374751[400] = 0;
   out_6900568612264374751[401] = 0;
   out_6900568612264374751[402] = 0;
   out_6900568612264374751[403] = 0;
   out_6900568612264374751[404] = 0;
   out_6900568612264374751[405] = 0;
   out_6900568612264374751[406] = 0;
   out_6900568612264374751[407] = 0;
   out_6900568612264374751[408] = 0;
   out_6900568612264374751[409] = 0;
   out_6900568612264374751[410] = 0;
   out_6900568612264374751[411] = 0;
   out_6900568612264374751[412] = 0;
   out_6900568612264374751[413] = 0;
   out_6900568612264374751[414] = 0;
   out_6900568612264374751[415] = 0;
   out_6900568612264374751[416] = 0;
   out_6900568612264374751[417] = 1.0;
   out_6900568612264374751[418] = 0;
   out_6900568612264374751[419] = 0;
   out_6900568612264374751[420] = 0;
   out_6900568612264374751[421] = 0;
   out_6900568612264374751[422] = 0;
   out_6900568612264374751[423] = 0;
   out_6900568612264374751[424] = 0;
   out_6900568612264374751[425] = 0;
   out_6900568612264374751[426] = 0;
   out_6900568612264374751[427] = 0;
   out_6900568612264374751[428] = 0;
   out_6900568612264374751[429] = 0;
   out_6900568612264374751[430] = 0;
   out_6900568612264374751[431] = 0;
   out_6900568612264374751[432] = 0;
   out_6900568612264374751[433] = 0;
   out_6900568612264374751[434] = 0;
   out_6900568612264374751[435] = 0;
   out_6900568612264374751[436] = 0;
   out_6900568612264374751[437] = 0;
   out_6900568612264374751[438] = 0;
   out_6900568612264374751[439] = 1.0;
   out_6900568612264374751[440] = 0;
   out_6900568612264374751[441] = 0;
   out_6900568612264374751[442] = 0;
   out_6900568612264374751[443] = 0;
   out_6900568612264374751[444] = 0;
   out_6900568612264374751[445] = 0;
   out_6900568612264374751[446] = 0;
   out_6900568612264374751[447] = 0;
   out_6900568612264374751[448] = 0;
   out_6900568612264374751[449] = 0;
   out_6900568612264374751[450] = 0;
   out_6900568612264374751[451] = 0;
   out_6900568612264374751[452] = 0;
   out_6900568612264374751[453] = 0;
   out_6900568612264374751[454] = 0;
   out_6900568612264374751[455] = 0;
   out_6900568612264374751[456] = 0;
   out_6900568612264374751[457] = 0;
   out_6900568612264374751[458] = 0;
   out_6900568612264374751[459] = 0;
   out_6900568612264374751[460] = 0;
   out_6900568612264374751[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_444317293709373841) {
   out_444317293709373841[0] = dt*state[7] + state[0];
   out_444317293709373841[1] = dt*state[8] + state[1];
   out_444317293709373841[2] = dt*state[9] + state[2];
   out_444317293709373841[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_444317293709373841[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_444317293709373841[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_444317293709373841[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_444317293709373841[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_444317293709373841[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_444317293709373841[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_444317293709373841[10] = state[10];
   out_444317293709373841[11] = state[11];
   out_444317293709373841[12] = state[12];
   out_444317293709373841[13] = state[13];
   out_444317293709373841[14] = state[14];
   out_444317293709373841[15] = state[15];
   out_444317293709373841[16] = state[16];
   out_444317293709373841[17] = state[17];
   out_444317293709373841[18] = state[18];
   out_444317293709373841[19] = state[19];
   out_444317293709373841[20] = state[20];
   out_444317293709373841[21] = state[21];
}
void F_fun(double *state, double dt, double *out_833440091851189730) {
   out_833440091851189730[0] = 1;
   out_833440091851189730[1] = 0;
   out_833440091851189730[2] = 0;
   out_833440091851189730[3] = 0;
   out_833440091851189730[4] = 0;
   out_833440091851189730[5] = 0;
   out_833440091851189730[6] = dt;
   out_833440091851189730[7] = 0;
   out_833440091851189730[8] = 0;
   out_833440091851189730[9] = 0;
   out_833440091851189730[10] = 0;
   out_833440091851189730[11] = 0;
   out_833440091851189730[12] = 0;
   out_833440091851189730[13] = 0;
   out_833440091851189730[14] = 0;
   out_833440091851189730[15] = 0;
   out_833440091851189730[16] = 0;
   out_833440091851189730[17] = 0;
   out_833440091851189730[18] = 0;
   out_833440091851189730[19] = 0;
   out_833440091851189730[20] = 0;
   out_833440091851189730[21] = 0;
   out_833440091851189730[22] = 1;
   out_833440091851189730[23] = 0;
   out_833440091851189730[24] = 0;
   out_833440091851189730[25] = 0;
   out_833440091851189730[26] = 0;
   out_833440091851189730[27] = 0;
   out_833440091851189730[28] = dt;
   out_833440091851189730[29] = 0;
   out_833440091851189730[30] = 0;
   out_833440091851189730[31] = 0;
   out_833440091851189730[32] = 0;
   out_833440091851189730[33] = 0;
   out_833440091851189730[34] = 0;
   out_833440091851189730[35] = 0;
   out_833440091851189730[36] = 0;
   out_833440091851189730[37] = 0;
   out_833440091851189730[38] = 0;
   out_833440091851189730[39] = 0;
   out_833440091851189730[40] = 0;
   out_833440091851189730[41] = 0;
   out_833440091851189730[42] = 0;
   out_833440091851189730[43] = 0;
   out_833440091851189730[44] = 1;
   out_833440091851189730[45] = 0;
   out_833440091851189730[46] = 0;
   out_833440091851189730[47] = 0;
   out_833440091851189730[48] = 0;
   out_833440091851189730[49] = 0;
   out_833440091851189730[50] = dt;
   out_833440091851189730[51] = 0;
   out_833440091851189730[52] = 0;
   out_833440091851189730[53] = 0;
   out_833440091851189730[54] = 0;
   out_833440091851189730[55] = 0;
   out_833440091851189730[56] = 0;
   out_833440091851189730[57] = 0;
   out_833440091851189730[58] = 0;
   out_833440091851189730[59] = 0;
   out_833440091851189730[60] = 0;
   out_833440091851189730[61] = 0;
   out_833440091851189730[62] = 0;
   out_833440091851189730[63] = 0;
   out_833440091851189730[64] = 0;
   out_833440091851189730[65] = 0;
   out_833440091851189730[66] = 1;
   out_833440091851189730[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_833440091851189730[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_833440091851189730[69] = 0;
   out_833440091851189730[70] = 0;
   out_833440091851189730[71] = 0;
   out_833440091851189730[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_833440091851189730[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_833440091851189730[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_833440091851189730[75] = 0;
   out_833440091851189730[76] = 0;
   out_833440091851189730[77] = 0;
   out_833440091851189730[78] = 0;
   out_833440091851189730[79] = 0;
   out_833440091851189730[80] = 0;
   out_833440091851189730[81] = 0;
   out_833440091851189730[82] = 0;
   out_833440091851189730[83] = 0;
   out_833440091851189730[84] = 0;
   out_833440091851189730[85] = 0;
   out_833440091851189730[86] = 0;
   out_833440091851189730[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_833440091851189730[88] = 1;
   out_833440091851189730[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_833440091851189730[90] = 0;
   out_833440091851189730[91] = 0;
   out_833440091851189730[92] = 0;
   out_833440091851189730[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_833440091851189730[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_833440091851189730[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_833440091851189730[96] = 0;
   out_833440091851189730[97] = 0;
   out_833440091851189730[98] = 0;
   out_833440091851189730[99] = 0;
   out_833440091851189730[100] = 0;
   out_833440091851189730[101] = 0;
   out_833440091851189730[102] = 0;
   out_833440091851189730[103] = 0;
   out_833440091851189730[104] = 0;
   out_833440091851189730[105] = 0;
   out_833440091851189730[106] = 0;
   out_833440091851189730[107] = 0;
   out_833440091851189730[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_833440091851189730[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_833440091851189730[110] = 1;
   out_833440091851189730[111] = 0;
   out_833440091851189730[112] = 0;
   out_833440091851189730[113] = 0;
   out_833440091851189730[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_833440091851189730[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_833440091851189730[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_833440091851189730[117] = 0;
   out_833440091851189730[118] = 0;
   out_833440091851189730[119] = 0;
   out_833440091851189730[120] = 0;
   out_833440091851189730[121] = 0;
   out_833440091851189730[122] = 0;
   out_833440091851189730[123] = 0;
   out_833440091851189730[124] = 0;
   out_833440091851189730[125] = 0;
   out_833440091851189730[126] = 0;
   out_833440091851189730[127] = 0;
   out_833440091851189730[128] = 0;
   out_833440091851189730[129] = 0;
   out_833440091851189730[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_833440091851189730[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_833440091851189730[132] = 1;
   out_833440091851189730[133] = 0;
   out_833440091851189730[134] = 0;
   out_833440091851189730[135] = 0;
   out_833440091851189730[136] = 0;
   out_833440091851189730[137] = 0;
   out_833440091851189730[138] = 0;
   out_833440091851189730[139] = 0;
   out_833440091851189730[140] = 0;
   out_833440091851189730[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_833440091851189730[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_833440091851189730[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_833440091851189730[144] = 0;
   out_833440091851189730[145] = 0;
   out_833440091851189730[146] = 0;
   out_833440091851189730[147] = 0;
   out_833440091851189730[148] = 0;
   out_833440091851189730[149] = 0;
   out_833440091851189730[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_833440091851189730[151] = 0;
   out_833440091851189730[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_833440091851189730[153] = 0;
   out_833440091851189730[154] = 1;
   out_833440091851189730[155] = 0;
   out_833440091851189730[156] = 0;
   out_833440091851189730[157] = 0;
   out_833440091851189730[158] = 0;
   out_833440091851189730[159] = 0;
   out_833440091851189730[160] = 0;
   out_833440091851189730[161] = 0;
   out_833440091851189730[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_833440091851189730[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_833440091851189730[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_833440091851189730[165] = 0;
   out_833440091851189730[166] = 0;
   out_833440091851189730[167] = 0;
   out_833440091851189730[168] = 0;
   out_833440091851189730[169] = 0;
   out_833440091851189730[170] = 0;
   out_833440091851189730[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_833440091851189730[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_833440091851189730[173] = 0;
   out_833440091851189730[174] = 0;
   out_833440091851189730[175] = 0;
   out_833440091851189730[176] = 1;
   out_833440091851189730[177] = 0;
   out_833440091851189730[178] = 0;
   out_833440091851189730[179] = 0;
   out_833440091851189730[180] = 0;
   out_833440091851189730[181] = 0;
   out_833440091851189730[182] = 0;
   out_833440091851189730[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_833440091851189730[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_833440091851189730[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_833440091851189730[186] = 0;
   out_833440091851189730[187] = 0;
   out_833440091851189730[188] = 0;
   out_833440091851189730[189] = 0;
   out_833440091851189730[190] = 0;
   out_833440091851189730[191] = 0;
   out_833440091851189730[192] = 0;
   out_833440091851189730[193] = 0;
   out_833440091851189730[194] = 0;
   out_833440091851189730[195] = 0;
   out_833440091851189730[196] = 0;
   out_833440091851189730[197] = 0;
   out_833440091851189730[198] = 1;
   out_833440091851189730[199] = 0;
   out_833440091851189730[200] = 0;
   out_833440091851189730[201] = 0;
   out_833440091851189730[202] = 0;
   out_833440091851189730[203] = 0;
   out_833440091851189730[204] = 0;
   out_833440091851189730[205] = 0;
   out_833440091851189730[206] = 0;
   out_833440091851189730[207] = 0;
   out_833440091851189730[208] = 0;
   out_833440091851189730[209] = 0;
   out_833440091851189730[210] = 0;
   out_833440091851189730[211] = 0;
   out_833440091851189730[212] = 0;
   out_833440091851189730[213] = 0;
   out_833440091851189730[214] = 0;
   out_833440091851189730[215] = 0;
   out_833440091851189730[216] = 0;
   out_833440091851189730[217] = 0;
   out_833440091851189730[218] = 0;
   out_833440091851189730[219] = 0;
   out_833440091851189730[220] = 1;
   out_833440091851189730[221] = 0;
   out_833440091851189730[222] = 0;
   out_833440091851189730[223] = 0;
   out_833440091851189730[224] = 0;
   out_833440091851189730[225] = 0;
   out_833440091851189730[226] = 0;
   out_833440091851189730[227] = 0;
   out_833440091851189730[228] = 0;
   out_833440091851189730[229] = 0;
   out_833440091851189730[230] = 0;
   out_833440091851189730[231] = 0;
   out_833440091851189730[232] = 0;
   out_833440091851189730[233] = 0;
   out_833440091851189730[234] = 0;
   out_833440091851189730[235] = 0;
   out_833440091851189730[236] = 0;
   out_833440091851189730[237] = 0;
   out_833440091851189730[238] = 0;
   out_833440091851189730[239] = 0;
   out_833440091851189730[240] = 0;
   out_833440091851189730[241] = 0;
   out_833440091851189730[242] = 1;
   out_833440091851189730[243] = 0;
   out_833440091851189730[244] = 0;
   out_833440091851189730[245] = 0;
   out_833440091851189730[246] = 0;
   out_833440091851189730[247] = 0;
   out_833440091851189730[248] = 0;
   out_833440091851189730[249] = 0;
   out_833440091851189730[250] = 0;
   out_833440091851189730[251] = 0;
   out_833440091851189730[252] = 0;
   out_833440091851189730[253] = 0;
   out_833440091851189730[254] = 0;
   out_833440091851189730[255] = 0;
   out_833440091851189730[256] = 0;
   out_833440091851189730[257] = 0;
   out_833440091851189730[258] = 0;
   out_833440091851189730[259] = 0;
   out_833440091851189730[260] = 0;
   out_833440091851189730[261] = 0;
   out_833440091851189730[262] = 0;
   out_833440091851189730[263] = 0;
   out_833440091851189730[264] = 1;
   out_833440091851189730[265] = 0;
   out_833440091851189730[266] = 0;
   out_833440091851189730[267] = 0;
   out_833440091851189730[268] = 0;
   out_833440091851189730[269] = 0;
   out_833440091851189730[270] = 0;
   out_833440091851189730[271] = 0;
   out_833440091851189730[272] = 0;
   out_833440091851189730[273] = 0;
   out_833440091851189730[274] = 0;
   out_833440091851189730[275] = 0;
   out_833440091851189730[276] = 0;
   out_833440091851189730[277] = 0;
   out_833440091851189730[278] = 0;
   out_833440091851189730[279] = 0;
   out_833440091851189730[280] = 0;
   out_833440091851189730[281] = 0;
   out_833440091851189730[282] = 0;
   out_833440091851189730[283] = 0;
   out_833440091851189730[284] = 0;
   out_833440091851189730[285] = 0;
   out_833440091851189730[286] = 1;
   out_833440091851189730[287] = 0;
   out_833440091851189730[288] = 0;
   out_833440091851189730[289] = 0;
   out_833440091851189730[290] = 0;
   out_833440091851189730[291] = 0;
   out_833440091851189730[292] = 0;
   out_833440091851189730[293] = 0;
   out_833440091851189730[294] = 0;
   out_833440091851189730[295] = 0;
   out_833440091851189730[296] = 0;
   out_833440091851189730[297] = 0;
   out_833440091851189730[298] = 0;
   out_833440091851189730[299] = 0;
   out_833440091851189730[300] = 0;
   out_833440091851189730[301] = 0;
   out_833440091851189730[302] = 0;
   out_833440091851189730[303] = 0;
   out_833440091851189730[304] = 0;
   out_833440091851189730[305] = 0;
   out_833440091851189730[306] = 0;
   out_833440091851189730[307] = 0;
   out_833440091851189730[308] = 1;
   out_833440091851189730[309] = 0;
   out_833440091851189730[310] = 0;
   out_833440091851189730[311] = 0;
   out_833440091851189730[312] = 0;
   out_833440091851189730[313] = 0;
   out_833440091851189730[314] = 0;
   out_833440091851189730[315] = 0;
   out_833440091851189730[316] = 0;
   out_833440091851189730[317] = 0;
   out_833440091851189730[318] = 0;
   out_833440091851189730[319] = 0;
   out_833440091851189730[320] = 0;
   out_833440091851189730[321] = 0;
   out_833440091851189730[322] = 0;
   out_833440091851189730[323] = 0;
   out_833440091851189730[324] = 0;
   out_833440091851189730[325] = 0;
   out_833440091851189730[326] = 0;
   out_833440091851189730[327] = 0;
   out_833440091851189730[328] = 0;
   out_833440091851189730[329] = 0;
   out_833440091851189730[330] = 1;
   out_833440091851189730[331] = 0;
   out_833440091851189730[332] = 0;
   out_833440091851189730[333] = 0;
   out_833440091851189730[334] = 0;
   out_833440091851189730[335] = 0;
   out_833440091851189730[336] = 0;
   out_833440091851189730[337] = 0;
   out_833440091851189730[338] = 0;
   out_833440091851189730[339] = 0;
   out_833440091851189730[340] = 0;
   out_833440091851189730[341] = 0;
   out_833440091851189730[342] = 0;
   out_833440091851189730[343] = 0;
   out_833440091851189730[344] = 0;
   out_833440091851189730[345] = 0;
   out_833440091851189730[346] = 0;
   out_833440091851189730[347] = 0;
   out_833440091851189730[348] = 0;
   out_833440091851189730[349] = 0;
   out_833440091851189730[350] = 0;
   out_833440091851189730[351] = 0;
   out_833440091851189730[352] = 1;
   out_833440091851189730[353] = 0;
   out_833440091851189730[354] = 0;
   out_833440091851189730[355] = 0;
   out_833440091851189730[356] = 0;
   out_833440091851189730[357] = 0;
   out_833440091851189730[358] = 0;
   out_833440091851189730[359] = 0;
   out_833440091851189730[360] = 0;
   out_833440091851189730[361] = 0;
   out_833440091851189730[362] = 0;
   out_833440091851189730[363] = 0;
   out_833440091851189730[364] = 0;
   out_833440091851189730[365] = 0;
   out_833440091851189730[366] = 0;
   out_833440091851189730[367] = 0;
   out_833440091851189730[368] = 0;
   out_833440091851189730[369] = 0;
   out_833440091851189730[370] = 0;
   out_833440091851189730[371] = 0;
   out_833440091851189730[372] = 0;
   out_833440091851189730[373] = 0;
   out_833440091851189730[374] = 1;
   out_833440091851189730[375] = 0;
   out_833440091851189730[376] = 0;
   out_833440091851189730[377] = 0;
   out_833440091851189730[378] = 0;
   out_833440091851189730[379] = 0;
   out_833440091851189730[380] = 0;
   out_833440091851189730[381] = 0;
   out_833440091851189730[382] = 0;
   out_833440091851189730[383] = 0;
   out_833440091851189730[384] = 0;
   out_833440091851189730[385] = 0;
   out_833440091851189730[386] = 0;
   out_833440091851189730[387] = 0;
   out_833440091851189730[388] = 0;
   out_833440091851189730[389] = 0;
   out_833440091851189730[390] = 0;
   out_833440091851189730[391] = 0;
   out_833440091851189730[392] = 0;
   out_833440091851189730[393] = 0;
   out_833440091851189730[394] = 0;
   out_833440091851189730[395] = 0;
   out_833440091851189730[396] = 1;
   out_833440091851189730[397] = 0;
   out_833440091851189730[398] = 0;
   out_833440091851189730[399] = 0;
   out_833440091851189730[400] = 0;
   out_833440091851189730[401] = 0;
   out_833440091851189730[402] = 0;
   out_833440091851189730[403] = 0;
   out_833440091851189730[404] = 0;
   out_833440091851189730[405] = 0;
   out_833440091851189730[406] = 0;
   out_833440091851189730[407] = 0;
   out_833440091851189730[408] = 0;
   out_833440091851189730[409] = 0;
   out_833440091851189730[410] = 0;
   out_833440091851189730[411] = 0;
   out_833440091851189730[412] = 0;
   out_833440091851189730[413] = 0;
   out_833440091851189730[414] = 0;
   out_833440091851189730[415] = 0;
   out_833440091851189730[416] = 0;
   out_833440091851189730[417] = 0;
   out_833440091851189730[418] = 1;
   out_833440091851189730[419] = 0;
   out_833440091851189730[420] = 0;
   out_833440091851189730[421] = 0;
   out_833440091851189730[422] = 0;
   out_833440091851189730[423] = 0;
   out_833440091851189730[424] = 0;
   out_833440091851189730[425] = 0;
   out_833440091851189730[426] = 0;
   out_833440091851189730[427] = 0;
   out_833440091851189730[428] = 0;
   out_833440091851189730[429] = 0;
   out_833440091851189730[430] = 0;
   out_833440091851189730[431] = 0;
   out_833440091851189730[432] = 0;
   out_833440091851189730[433] = 0;
   out_833440091851189730[434] = 0;
   out_833440091851189730[435] = 0;
   out_833440091851189730[436] = 0;
   out_833440091851189730[437] = 0;
   out_833440091851189730[438] = 0;
   out_833440091851189730[439] = 0;
   out_833440091851189730[440] = 1;
}
void h_4(double *state, double *unused, double *out_5875214861579885541) {
   out_5875214861579885541[0] = state[10] + state[13];
   out_5875214861579885541[1] = state[11] + state[14];
   out_5875214861579885541[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_276857831883521901) {
   out_276857831883521901[0] = 0;
   out_276857831883521901[1] = 0;
   out_276857831883521901[2] = 0;
   out_276857831883521901[3] = 0;
   out_276857831883521901[4] = 0;
   out_276857831883521901[5] = 0;
   out_276857831883521901[6] = 0;
   out_276857831883521901[7] = 0;
   out_276857831883521901[8] = 0;
   out_276857831883521901[9] = 0;
   out_276857831883521901[10] = 1;
   out_276857831883521901[11] = 0;
   out_276857831883521901[12] = 0;
   out_276857831883521901[13] = 1;
   out_276857831883521901[14] = 0;
   out_276857831883521901[15] = 0;
   out_276857831883521901[16] = 0;
   out_276857831883521901[17] = 0;
   out_276857831883521901[18] = 0;
   out_276857831883521901[19] = 0;
   out_276857831883521901[20] = 0;
   out_276857831883521901[21] = 0;
   out_276857831883521901[22] = 0;
   out_276857831883521901[23] = 0;
   out_276857831883521901[24] = 0;
   out_276857831883521901[25] = 0;
   out_276857831883521901[26] = 0;
   out_276857831883521901[27] = 0;
   out_276857831883521901[28] = 0;
   out_276857831883521901[29] = 0;
   out_276857831883521901[30] = 0;
   out_276857831883521901[31] = 0;
   out_276857831883521901[32] = 0;
   out_276857831883521901[33] = 1;
   out_276857831883521901[34] = 0;
   out_276857831883521901[35] = 0;
   out_276857831883521901[36] = 1;
   out_276857831883521901[37] = 0;
   out_276857831883521901[38] = 0;
   out_276857831883521901[39] = 0;
   out_276857831883521901[40] = 0;
   out_276857831883521901[41] = 0;
   out_276857831883521901[42] = 0;
   out_276857831883521901[43] = 0;
   out_276857831883521901[44] = 0;
   out_276857831883521901[45] = 0;
   out_276857831883521901[46] = 0;
   out_276857831883521901[47] = 0;
   out_276857831883521901[48] = 0;
   out_276857831883521901[49] = 0;
   out_276857831883521901[50] = 0;
   out_276857831883521901[51] = 0;
   out_276857831883521901[52] = 0;
   out_276857831883521901[53] = 0;
   out_276857831883521901[54] = 0;
   out_276857831883521901[55] = 0;
   out_276857831883521901[56] = 1;
   out_276857831883521901[57] = 0;
   out_276857831883521901[58] = 0;
   out_276857831883521901[59] = 1;
   out_276857831883521901[60] = 0;
   out_276857831883521901[61] = 0;
   out_276857831883521901[62] = 0;
   out_276857831883521901[63] = 0;
   out_276857831883521901[64] = 0;
   out_276857831883521901[65] = 0;
}
void h_9(double *state, double *unused, double *out_7431485379286447551) {
   out_7431485379286447551[0] = state[10];
   out_7431485379286447551[1] = state[11];
   out_7431485379286447551[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7564076767147969371) {
   out_7564076767147969371[0] = 0;
   out_7564076767147969371[1] = 0;
   out_7564076767147969371[2] = 0;
   out_7564076767147969371[3] = 0;
   out_7564076767147969371[4] = 0;
   out_7564076767147969371[5] = 0;
   out_7564076767147969371[6] = 0;
   out_7564076767147969371[7] = 0;
   out_7564076767147969371[8] = 0;
   out_7564076767147969371[9] = 0;
   out_7564076767147969371[10] = 1;
   out_7564076767147969371[11] = 0;
   out_7564076767147969371[12] = 0;
   out_7564076767147969371[13] = 0;
   out_7564076767147969371[14] = 0;
   out_7564076767147969371[15] = 0;
   out_7564076767147969371[16] = 0;
   out_7564076767147969371[17] = 0;
   out_7564076767147969371[18] = 0;
   out_7564076767147969371[19] = 0;
   out_7564076767147969371[20] = 0;
   out_7564076767147969371[21] = 0;
   out_7564076767147969371[22] = 0;
   out_7564076767147969371[23] = 0;
   out_7564076767147969371[24] = 0;
   out_7564076767147969371[25] = 0;
   out_7564076767147969371[26] = 0;
   out_7564076767147969371[27] = 0;
   out_7564076767147969371[28] = 0;
   out_7564076767147969371[29] = 0;
   out_7564076767147969371[30] = 0;
   out_7564076767147969371[31] = 0;
   out_7564076767147969371[32] = 0;
   out_7564076767147969371[33] = 1;
   out_7564076767147969371[34] = 0;
   out_7564076767147969371[35] = 0;
   out_7564076767147969371[36] = 0;
   out_7564076767147969371[37] = 0;
   out_7564076767147969371[38] = 0;
   out_7564076767147969371[39] = 0;
   out_7564076767147969371[40] = 0;
   out_7564076767147969371[41] = 0;
   out_7564076767147969371[42] = 0;
   out_7564076767147969371[43] = 0;
   out_7564076767147969371[44] = 0;
   out_7564076767147969371[45] = 0;
   out_7564076767147969371[46] = 0;
   out_7564076767147969371[47] = 0;
   out_7564076767147969371[48] = 0;
   out_7564076767147969371[49] = 0;
   out_7564076767147969371[50] = 0;
   out_7564076767147969371[51] = 0;
   out_7564076767147969371[52] = 0;
   out_7564076767147969371[53] = 0;
   out_7564076767147969371[54] = 0;
   out_7564076767147969371[55] = 0;
   out_7564076767147969371[56] = 1;
   out_7564076767147969371[57] = 0;
   out_7564076767147969371[58] = 0;
   out_7564076767147969371[59] = 0;
   out_7564076767147969371[60] = 0;
   out_7564076767147969371[61] = 0;
   out_7564076767147969371[62] = 0;
   out_7564076767147969371[63] = 0;
   out_7564076767147969371[64] = 0;
   out_7564076767147969371[65] = 0;
}
void h_10(double *state, double *unused, double *out_8274293454775594883) {
   out_8274293454775594883[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8274293454775594883[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8274293454775594883[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3646697484698039257) {
   out_3646697484698039257[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3646697484698039257[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3646697484698039257[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3646697484698039257[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3646697484698039257[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3646697484698039257[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3646697484698039257[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3646697484698039257[7] = 0;
   out_3646697484698039257[8] = 0;
   out_3646697484698039257[9] = 0;
   out_3646697484698039257[10] = 0;
   out_3646697484698039257[11] = 0;
   out_3646697484698039257[12] = 0;
   out_3646697484698039257[13] = 0;
   out_3646697484698039257[14] = 0;
   out_3646697484698039257[15] = 0;
   out_3646697484698039257[16] = 1;
   out_3646697484698039257[17] = 0;
   out_3646697484698039257[18] = 0;
   out_3646697484698039257[19] = 1;
   out_3646697484698039257[20] = 0;
   out_3646697484698039257[21] = 0;
   out_3646697484698039257[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3646697484698039257[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3646697484698039257[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3646697484698039257[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3646697484698039257[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3646697484698039257[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3646697484698039257[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3646697484698039257[29] = 0;
   out_3646697484698039257[30] = 0;
   out_3646697484698039257[31] = 0;
   out_3646697484698039257[32] = 0;
   out_3646697484698039257[33] = 0;
   out_3646697484698039257[34] = 0;
   out_3646697484698039257[35] = 0;
   out_3646697484698039257[36] = 0;
   out_3646697484698039257[37] = 0;
   out_3646697484698039257[38] = 0;
   out_3646697484698039257[39] = 1;
   out_3646697484698039257[40] = 0;
   out_3646697484698039257[41] = 0;
   out_3646697484698039257[42] = 1;
   out_3646697484698039257[43] = 0;
   out_3646697484698039257[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3646697484698039257[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3646697484698039257[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3646697484698039257[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3646697484698039257[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3646697484698039257[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3646697484698039257[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3646697484698039257[51] = 0;
   out_3646697484698039257[52] = 0;
   out_3646697484698039257[53] = 0;
   out_3646697484698039257[54] = 0;
   out_3646697484698039257[55] = 0;
   out_3646697484698039257[56] = 0;
   out_3646697484698039257[57] = 0;
   out_3646697484698039257[58] = 0;
   out_3646697484698039257[59] = 0;
   out_3646697484698039257[60] = 0;
   out_3646697484698039257[61] = 0;
   out_3646697484698039257[62] = 1;
   out_3646697484698039257[63] = 0;
   out_3646697484698039257[64] = 0;
   out_3646697484698039257[65] = 1;
}
void h_12(double *state, double *unused, double *out_7462563038781612366) {
   out_7462563038781612366[0] = state[0];
   out_7462563038781612366[1] = state[1];
   out_7462563038781612366[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6104400545159211095) {
   out_6104400545159211095[0] = 1;
   out_6104400545159211095[1] = 0;
   out_6104400545159211095[2] = 0;
   out_6104400545159211095[3] = 0;
   out_6104400545159211095[4] = 0;
   out_6104400545159211095[5] = 0;
   out_6104400545159211095[6] = 0;
   out_6104400545159211095[7] = 0;
   out_6104400545159211095[8] = 0;
   out_6104400545159211095[9] = 0;
   out_6104400545159211095[10] = 0;
   out_6104400545159211095[11] = 0;
   out_6104400545159211095[12] = 0;
   out_6104400545159211095[13] = 0;
   out_6104400545159211095[14] = 0;
   out_6104400545159211095[15] = 0;
   out_6104400545159211095[16] = 0;
   out_6104400545159211095[17] = 0;
   out_6104400545159211095[18] = 0;
   out_6104400545159211095[19] = 0;
   out_6104400545159211095[20] = 0;
   out_6104400545159211095[21] = 0;
   out_6104400545159211095[22] = 0;
   out_6104400545159211095[23] = 1;
   out_6104400545159211095[24] = 0;
   out_6104400545159211095[25] = 0;
   out_6104400545159211095[26] = 0;
   out_6104400545159211095[27] = 0;
   out_6104400545159211095[28] = 0;
   out_6104400545159211095[29] = 0;
   out_6104400545159211095[30] = 0;
   out_6104400545159211095[31] = 0;
   out_6104400545159211095[32] = 0;
   out_6104400545159211095[33] = 0;
   out_6104400545159211095[34] = 0;
   out_6104400545159211095[35] = 0;
   out_6104400545159211095[36] = 0;
   out_6104400545159211095[37] = 0;
   out_6104400545159211095[38] = 0;
   out_6104400545159211095[39] = 0;
   out_6104400545159211095[40] = 0;
   out_6104400545159211095[41] = 0;
   out_6104400545159211095[42] = 0;
   out_6104400545159211095[43] = 0;
   out_6104400545159211095[44] = 0;
   out_6104400545159211095[45] = 0;
   out_6104400545159211095[46] = 1;
   out_6104400545159211095[47] = 0;
   out_6104400545159211095[48] = 0;
   out_6104400545159211095[49] = 0;
   out_6104400545159211095[50] = 0;
   out_6104400545159211095[51] = 0;
   out_6104400545159211095[52] = 0;
   out_6104400545159211095[53] = 0;
   out_6104400545159211095[54] = 0;
   out_6104400545159211095[55] = 0;
   out_6104400545159211095[56] = 0;
   out_6104400545159211095[57] = 0;
   out_6104400545159211095[58] = 0;
   out_6104400545159211095[59] = 0;
   out_6104400545159211095[60] = 0;
   out_6104400545159211095[61] = 0;
   out_6104400545159211095[62] = 0;
   out_6104400545159211095[63] = 0;
   out_6104400545159211095[64] = 0;
   out_6104400545159211095[65] = 0;
}
void h_35(double *state, double *unused, double *out_3219025280718560296) {
   out_3219025280718560296[0] = state[7];
   out_3219025280718560296[1] = state[8];
   out_3219025280718560296[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3358837512834197386) {
   out_3358837512834197386[0] = 0;
   out_3358837512834197386[1] = 0;
   out_3358837512834197386[2] = 0;
   out_3358837512834197386[3] = 0;
   out_3358837512834197386[4] = 0;
   out_3358837512834197386[5] = 0;
   out_3358837512834197386[6] = 0;
   out_3358837512834197386[7] = 1;
   out_3358837512834197386[8] = 0;
   out_3358837512834197386[9] = 0;
   out_3358837512834197386[10] = 0;
   out_3358837512834197386[11] = 0;
   out_3358837512834197386[12] = 0;
   out_3358837512834197386[13] = 0;
   out_3358837512834197386[14] = 0;
   out_3358837512834197386[15] = 0;
   out_3358837512834197386[16] = 0;
   out_3358837512834197386[17] = 0;
   out_3358837512834197386[18] = 0;
   out_3358837512834197386[19] = 0;
   out_3358837512834197386[20] = 0;
   out_3358837512834197386[21] = 0;
   out_3358837512834197386[22] = 0;
   out_3358837512834197386[23] = 0;
   out_3358837512834197386[24] = 0;
   out_3358837512834197386[25] = 0;
   out_3358837512834197386[26] = 0;
   out_3358837512834197386[27] = 0;
   out_3358837512834197386[28] = 0;
   out_3358837512834197386[29] = 0;
   out_3358837512834197386[30] = 1;
   out_3358837512834197386[31] = 0;
   out_3358837512834197386[32] = 0;
   out_3358837512834197386[33] = 0;
   out_3358837512834197386[34] = 0;
   out_3358837512834197386[35] = 0;
   out_3358837512834197386[36] = 0;
   out_3358837512834197386[37] = 0;
   out_3358837512834197386[38] = 0;
   out_3358837512834197386[39] = 0;
   out_3358837512834197386[40] = 0;
   out_3358837512834197386[41] = 0;
   out_3358837512834197386[42] = 0;
   out_3358837512834197386[43] = 0;
   out_3358837512834197386[44] = 0;
   out_3358837512834197386[45] = 0;
   out_3358837512834197386[46] = 0;
   out_3358837512834197386[47] = 0;
   out_3358837512834197386[48] = 0;
   out_3358837512834197386[49] = 0;
   out_3358837512834197386[50] = 0;
   out_3358837512834197386[51] = 0;
   out_3358837512834197386[52] = 0;
   out_3358837512834197386[53] = 1;
   out_3358837512834197386[54] = 0;
   out_3358837512834197386[55] = 0;
   out_3358837512834197386[56] = 0;
   out_3358837512834197386[57] = 0;
   out_3358837512834197386[58] = 0;
   out_3358837512834197386[59] = 0;
   out_3358837512834197386[60] = 0;
   out_3358837512834197386[61] = 0;
   out_3358837512834197386[62] = 0;
   out_3358837512834197386[63] = 0;
   out_3358837512834197386[64] = 0;
   out_3358837512834197386[65] = 0;
}
void h_32(double *state, double *unused, double *out_5537109185631613612) {
   out_5537109185631613612[0] = state[3];
   out_5537109185631613612[1] = state[4];
   out_5537109185631613612[2] = state[5];
   out_5537109185631613612[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3774684674196869746) {
   out_3774684674196869746[0] = 0;
   out_3774684674196869746[1] = 0;
   out_3774684674196869746[2] = 0;
   out_3774684674196869746[3] = 1;
   out_3774684674196869746[4] = 0;
   out_3774684674196869746[5] = 0;
   out_3774684674196869746[6] = 0;
   out_3774684674196869746[7] = 0;
   out_3774684674196869746[8] = 0;
   out_3774684674196869746[9] = 0;
   out_3774684674196869746[10] = 0;
   out_3774684674196869746[11] = 0;
   out_3774684674196869746[12] = 0;
   out_3774684674196869746[13] = 0;
   out_3774684674196869746[14] = 0;
   out_3774684674196869746[15] = 0;
   out_3774684674196869746[16] = 0;
   out_3774684674196869746[17] = 0;
   out_3774684674196869746[18] = 0;
   out_3774684674196869746[19] = 0;
   out_3774684674196869746[20] = 0;
   out_3774684674196869746[21] = 0;
   out_3774684674196869746[22] = 0;
   out_3774684674196869746[23] = 0;
   out_3774684674196869746[24] = 0;
   out_3774684674196869746[25] = 0;
   out_3774684674196869746[26] = 1;
   out_3774684674196869746[27] = 0;
   out_3774684674196869746[28] = 0;
   out_3774684674196869746[29] = 0;
   out_3774684674196869746[30] = 0;
   out_3774684674196869746[31] = 0;
   out_3774684674196869746[32] = 0;
   out_3774684674196869746[33] = 0;
   out_3774684674196869746[34] = 0;
   out_3774684674196869746[35] = 0;
   out_3774684674196869746[36] = 0;
   out_3774684674196869746[37] = 0;
   out_3774684674196869746[38] = 0;
   out_3774684674196869746[39] = 0;
   out_3774684674196869746[40] = 0;
   out_3774684674196869746[41] = 0;
   out_3774684674196869746[42] = 0;
   out_3774684674196869746[43] = 0;
   out_3774684674196869746[44] = 0;
   out_3774684674196869746[45] = 0;
   out_3774684674196869746[46] = 0;
   out_3774684674196869746[47] = 0;
   out_3774684674196869746[48] = 0;
   out_3774684674196869746[49] = 1;
   out_3774684674196869746[50] = 0;
   out_3774684674196869746[51] = 0;
   out_3774684674196869746[52] = 0;
   out_3774684674196869746[53] = 0;
   out_3774684674196869746[54] = 0;
   out_3774684674196869746[55] = 0;
   out_3774684674196869746[56] = 0;
   out_3774684674196869746[57] = 0;
   out_3774684674196869746[58] = 0;
   out_3774684674196869746[59] = 0;
   out_3774684674196869746[60] = 0;
   out_3774684674196869746[61] = 0;
   out_3774684674196869746[62] = 0;
   out_3774684674196869746[63] = 0;
   out_3774684674196869746[64] = 0;
   out_3774684674196869746[65] = 0;
   out_3774684674196869746[66] = 0;
   out_3774684674196869746[67] = 0;
   out_3774684674196869746[68] = 0;
   out_3774684674196869746[69] = 0;
   out_3774684674196869746[70] = 0;
   out_3774684674196869746[71] = 0;
   out_3774684674196869746[72] = 1;
   out_3774684674196869746[73] = 0;
   out_3774684674196869746[74] = 0;
   out_3774684674196869746[75] = 0;
   out_3774684674196869746[76] = 0;
   out_3774684674196869746[77] = 0;
   out_3774684674196869746[78] = 0;
   out_3774684674196869746[79] = 0;
   out_3774684674196869746[80] = 0;
   out_3774684674196869746[81] = 0;
   out_3774684674196869746[82] = 0;
   out_3774684674196869746[83] = 0;
   out_3774684674196869746[84] = 0;
   out_3774684674196869746[85] = 0;
   out_3774684674196869746[86] = 0;
   out_3774684674196869746[87] = 0;
}
void h_13(double *state, double *unused, double *out_1615263710325240669) {
   out_1615263710325240669[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1615263710325240669[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1615263710325240669[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1846820156559909960) {
   out_1846820156559909960[0] = 0;
   out_1846820156559909960[1] = 0;
   out_1846820156559909960[2] = 0;
   out_1846820156559909960[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1846820156559909960[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1846820156559909960[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1846820156559909960[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1846820156559909960[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1846820156559909960[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1846820156559909960[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1846820156559909960[10] = 0;
   out_1846820156559909960[11] = 0;
   out_1846820156559909960[12] = 0;
   out_1846820156559909960[13] = 0;
   out_1846820156559909960[14] = 0;
   out_1846820156559909960[15] = 0;
   out_1846820156559909960[16] = 0;
   out_1846820156559909960[17] = 0;
   out_1846820156559909960[18] = 0;
   out_1846820156559909960[19] = 0;
   out_1846820156559909960[20] = 0;
   out_1846820156559909960[21] = 0;
   out_1846820156559909960[22] = 0;
   out_1846820156559909960[23] = 0;
   out_1846820156559909960[24] = 0;
   out_1846820156559909960[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1846820156559909960[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1846820156559909960[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1846820156559909960[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1846820156559909960[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1846820156559909960[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1846820156559909960[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1846820156559909960[32] = 0;
   out_1846820156559909960[33] = 0;
   out_1846820156559909960[34] = 0;
   out_1846820156559909960[35] = 0;
   out_1846820156559909960[36] = 0;
   out_1846820156559909960[37] = 0;
   out_1846820156559909960[38] = 0;
   out_1846820156559909960[39] = 0;
   out_1846820156559909960[40] = 0;
   out_1846820156559909960[41] = 0;
   out_1846820156559909960[42] = 0;
   out_1846820156559909960[43] = 0;
   out_1846820156559909960[44] = 0;
   out_1846820156559909960[45] = 0;
   out_1846820156559909960[46] = 0;
   out_1846820156559909960[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1846820156559909960[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1846820156559909960[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1846820156559909960[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1846820156559909960[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1846820156559909960[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1846820156559909960[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1846820156559909960[54] = 0;
   out_1846820156559909960[55] = 0;
   out_1846820156559909960[56] = 0;
   out_1846820156559909960[57] = 0;
   out_1846820156559909960[58] = 0;
   out_1846820156559909960[59] = 0;
   out_1846820156559909960[60] = 0;
   out_1846820156559909960[61] = 0;
   out_1846820156559909960[62] = 0;
   out_1846820156559909960[63] = 0;
   out_1846820156559909960[64] = 0;
   out_1846820156559909960[65] = 0;
}
void h_14(double *state, double *unused, double *out_7431485379286447551) {
   out_7431485379286447551[0] = state[10];
   out_7431485379286447551[1] = state[11];
   out_7431485379286447551[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7564076767147969371) {
   out_7564076767147969371[0] = 0;
   out_7564076767147969371[1] = 0;
   out_7564076767147969371[2] = 0;
   out_7564076767147969371[3] = 0;
   out_7564076767147969371[4] = 0;
   out_7564076767147969371[5] = 0;
   out_7564076767147969371[6] = 0;
   out_7564076767147969371[7] = 0;
   out_7564076767147969371[8] = 0;
   out_7564076767147969371[9] = 0;
   out_7564076767147969371[10] = 1;
   out_7564076767147969371[11] = 0;
   out_7564076767147969371[12] = 0;
   out_7564076767147969371[13] = 0;
   out_7564076767147969371[14] = 0;
   out_7564076767147969371[15] = 0;
   out_7564076767147969371[16] = 0;
   out_7564076767147969371[17] = 0;
   out_7564076767147969371[18] = 0;
   out_7564076767147969371[19] = 0;
   out_7564076767147969371[20] = 0;
   out_7564076767147969371[21] = 0;
   out_7564076767147969371[22] = 0;
   out_7564076767147969371[23] = 0;
   out_7564076767147969371[24] = 0;
   out_7564076767147969371[25] = 0;
   out_7564076767147969371[26] = 0;
   out_7564076767147969371[27] = 0;
   out_7564076767147969371[28] = 0;
   out_7564076767147969371[29] = 0;
   out_7564076767147969371[30] = 0;
   out_7564076767147969371[31] = 0;
   out_7564076767147969371[32] = 0;
   out_7564076767147969371[33] = 1;
   out_7564076767147969371[34] = 0;
   out_7564076767147969371[35] = 0;
   out_7564076767147969371[36] = 0;
   out_7564076767147969371[37] = 0;
   out_7564076767147969371[38] = 0;
   out_7564076767147969371[39] = 0;
   out_7564076767147969371[40] = 0;
   out_7564076767147969371[41] = 0;
   out_7564076767147969371[42] = 0;
   out_7564076767147969371[43] = 0;
   out_7564076767147969371[44] = 0;
   out_7564076767147969371[45] = 0;
   out_7564076767147969371[46] = 0;
   out_7564076767147969371[47] = 0;
   out_7564076767147969371[48] = 0;
   out_7564076767147969371[49] = 0;
   out_7564076767147969371[50] = 0;
   out_7564076767147969371[51] = 0;
   out_7564076767147969371[52] = 0;
   out_7564076767147969371[53] = 0;
   out_7564076767147969371[54] = 0;
   out_7564076767147969371[55] = 0;
   out_7564076767147969371[56] = 1;
   out_7564076767147969371[57] = 0;
   out_7564076767147969371[58] = 0;
   out_7564076767147969371[59] = 0;
   out_7564076767147969371[60] = 0;
   out_7564076767147969371[61] = 0;
   out_7564076767147969371[62] = 0;
   out_7564076767147969371[63] = 0;
   out_7564076767147969371[64] = 0;
   out_7564076767147969371[65] = 0;
}
void h_33(double *state, double *unused, double *out_4659271231748144567) {
   out_4659271231748144567[0] = state[16];
   out_4659271231748144567[1] = state[17];
   out_4659271231748144567[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4606637891179707910) {
   out_4606637891179707910[0] = 0;
   out_4606637891179707910[1] = 0;
   out_4606637891179707910[2] = 0;
   out_4606637891179707910[3] = 0;
   out_4606637891179707910[4] = 0;
   out_4606637891179707910[5] = 0;
   out_4606637891179707910[6] = 0;
   out_4606637891179707910[7] = 0;
   out_4606637891179707910[8] = 0;
   out_4606637891179707910[9] = 0;
   out_4606637891179707910[10] = 0;
   out_4606637891179707910[11] = 0;
   out_4606637891179707910[12] = 0;
   out_4606637891179707910[13] = 0;
   out_4606637891179707910[14] = 0;
   out_4606637891179707910[15] = 0;
   out_4606637891179707910[16] = 1;
   out_4606637891179707910[17] = 0;
   out_4606637891179707910[18] = 0;
   out_4606637891179707910[19] = 0;
   out_4606637891179707910[20] = 0;
   out_4606637891179707910[21] = 0;
   out_4606637891179707910[22] = 0;
   out_4606637891179707910[23] = 0;
   out_4606637891179707910[24] = 0;
   out_4606637891179707910[25] = 0;
   out_4606637891179707910[26] = 0;
   out_4606637891179707910[27] = 0;
   out_4606637891179707910[28] = 0;
   out_4606637891179707910[29] = 0;
   out_4606637891179707910[30] = 0;
   out_4606637891179707910[31] = 0;
   out_4606637891179707910[32] = 0;
   out_4606637891179707910[33] = 0;
   out_4606637891179707910[34] = 0;
   out_4606637891179707910[35] = 0;
   out_4606637891179707910[36] = 0;
   out_4606637891179707910[37] = 0;
   out_4606637891179707910[38] = 0;
   out_4606637891179707910[39] = 1;
   out_4606637891179707910[40] = 0;
   out_4606637891179707910[41] = 0;
   out_4606637891179707910[42] = 0;
   out_4606637891179707910[43] = 0;
   out_4606637891179707910[44] = 0;
   out_4606637891179707910[45] = 0;
   out_4606637891179707910[46] = 0;
   out_4606637891179707910[47] = 0;
   out_4606637891179707910[48] = 0;
   out_4606637891179707910[49] = 0;
   out_4606637891179707910[50] = 0;
   out_4606637891179707910[51] = 0;
   out_4606637891179707910[52] = 0;
   out_4606637891179707910[53] = 0;
   out_4606637891179707910[54] = 0;
   out_4606637891179707910[55] = 0;
   out_4606637891179707910[56] = 0;
   out_4606637891179707910[57] = 0;
   out_4606637891179707910[58] = 0;
   out_4606637891179707910[59] = 0;
   out_4606637891179707910[60] = 0;
   out_4606637891179707910[61] = 0;
   out_4606637891179707910[62] = 1;
   out_4606637891179707910[63] = 0;
   out_4606637891179707910[64] = 0;
   out_4606637891179707910[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7275051445048872074) {
  H(in_vec, out_7275051445048872074);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_900214999320880639) {
  err_fun(nom_x, delta_x, out_900214999320880639);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6228497090895348531) {
  inv_err_fun(nom_x, true_x, out_6228497090895348531);
}
void live_H_mod_fun(double *state, double *out_6900568612264374751) {
  H_mod_fun(state, out_6900568612264374751);
}
void live_f_fun(double *state, double dt, double *out_444317293709373841) {
  f_fun(state,  dt, out_444317293709373841);
}
void live_F_fun(double *state, double dt, double *out_833440091851189730) {
  F_fun(state,  dt, out_833440091851189730);
}
void live_h_4(double *state, double *unused, double *out_5875214861579885541) {
  h_4(state, unused, out_5875214861579885541);
}
void live_H_4(double *state, double *unused, double *out_276857831883521901) {
  H_4(state, unused, out_276857831883521901);
}
void live_h_9(double *state, double *unused, double *out_7431485379286447551) {
  h_9(state, unused, out_7431485379286447551);
}
void live_H_9(double *state, double *unused, double *out_7564076767147969371) {
  H_9(state, unused, out_7564076767147969371);
}
void live_h_10(double *state, double *unused, double *out_8274293454775594883) {
  h_10(state, unused, out_8274293454775594883);
}
void live_H_10(double *state, double *unused, double *out_3646697484698039257) {
  H_10(state, unused, out_3646697484698039257);
}
void live_h_12(double *state, double *unused, double *out_7462563038781612366) {
  h_12(state, unused, out_7462563038781612366);
}
void live_H_12(double *state, double *unused, double *out_6104400545159211095) {
  H_12(state, unused, out_6104400545159211095);
}
void live_h_35(double *state, double *unused, double *out_3219025280718560296) {
  h_35(state, unused, out_3219025280718560296);
}
void live_H_35(double *state, double *unused, double *out_3358837512834197386) {
  H_35(state, unused, out_3358837512834197386);
}
void live_h_32(double *state, double *unused, double *out_5537109185631613612) {
  h_32(state, unused, out_5537109185631613612);
}
void live_H_32(double *state, double *unused, double *out_3774684674196869746) {
  H_32(state, unused, out_3774684674196869746);
}
void live_h_13(double *state, double *unused, double *out_1615263710325240669) {
  h_13(state, unused, out_1615263710325240669);
}
void live_H_13(double *state, double *unused, double *out_1846820156559909960) {
  H_13(state, unused, out_1846820156559909960);
}
void live_h_14(double *state, double *unused, double *out_7431485379286447551) {
  h_14(state, unused, out_7431485379286447551);
}
void live_H_14(double *state, double *unused, double *out_7564076767147969371) {
  H_14(state, unused, out_7564076767147969371);
}
void live_h_33(double *state, double *unused, double *out_4659271231748144567) {
  h_33(state, unused, out_4659271231748144567);
}
void live_H_33(double *state, double *unused, double *out_4606637891179707910) {
  H_33(state, unused, out_4606637891179707910);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
